// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSON Schema generator produces valid code: json 1`] = `
"{
  \\"$schema\\": \\"http://json-schema.org/draft-07/schema#\\",
  \\"definitions\\": {
    \\"UserBody\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"data\\": {
          \\"type\\": \\"object\\",
          \\"properties\\": {
            \\"firstName\\": {
              \\"type\\": \\"string\\"
            },
            \\"lastName\\": {
              \\"type\\": \\"string\\"
            },
            \\"profile\\": {
              \\"$ref\\": \\"#/definitions/Profile\\"
            }
          },
          \\"required\\": [
            \\"firstName\\",
            \\"lastName\\",
            \\"profile\\"
          ]
        }
      },
      \\"required\\": [
        \\"data\\"
      ]
    },
    \\"Profile\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"private\\": {
          \\"type\\": \\"boolean\\"
        },
        \\"messageOptions\\": {
          \\"$ref\\": \\"#/definitions/MessageOptions\\"
        }
      },
      \\"required\\": [
        \\"private\\",
        \\"messageOptions\\"
      ]
    },
    \\"MessageOptions\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"newsletter\\": {
          \\"type\\": \\"boolean\\"
        }
      },
      \\"required\\": [
        \\"newsletter\\"
      ]
    },
    \\"ErrorBody\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"name\\": {
          \\"type\\": \\"string\\"
        },
        \\"message\\": {
          \\"type\\": \\"array\\",
          \\"items\\": {
            \\"type\\": \\"string\\"
          }
        }
      },
      \\"required\\": [
        \\"name\\",
        \\"message\\"
      ]
    },
    \\"UserQuery\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"id\\": {
          \\"type\\": \\"number\\"
        },
        \\"slug\\": {
          \\"type\\": \\"string\\"
        }
      },
      \\"required\\": [
        \\"id\\",
        \\"slug\\"
      ]
    },
    \\"CreateUserRequestBody\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"data\\": {
          \\"type\\": \\"object\\",
          \\"properties\\": {
            \\"firstName\\": {
              \\"type\\": \\"string\\"
            },
            \\"lastName\\": {
              \\"type\\": \\"string\\"
            },
            \\"age\\": {
              \\"type\\": \\"number\\"
            },
            \\"email\\": {
              \\"$ref\\": \\"#/definitions/Email\\"
            },
            \\"address\\": {
              \\"$ref\\": \\"#/definitions/Address\\"
            }
          },
          \\"required\\": [
            \\"firstName\\",
            \\"lastName\\",
            \\"age\\",
            \\"email\\",
            \\"address\\"
          ]
        }
      },
      \\"required\\": [
        \\"data\\"
      ]
    },
    \\"Email\\": {
      \\"type\\": \\"string\\"
    },
    \\"Address\\": {
      \\"type\\": \\"string\\"
    }
  }
}"
`;

exports[`JSON Schema generator produces valid code: yaml 1`] = `
"$schema: 'http://json-schema.org/draft-07/schema#'
definitions:
  UserBody:
    type: object
    properties:
      data:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          profile:
            $ref: '#/definitions/Profile'
        required:
          - firstName
          - lastName
          - profile
    required:
      - data
  Profile:
    type: object
    properties:
      private:
        type: boolean
      messageOptions:
        $ref: '#/definitions/MessageOptions'
    required:
      - private
      - messageOptions
  MessageOptions:
    type: object
    properties:
      newsletter:
        type: boolean
    required:
      - newsletter
  ErrorBody:
    type: object
    properties:
      name:
        type: string
      message:
        type: array
        items:
          type: string
    required:
      - name
      - message
  UserQuery:
    type: object
    properties:
      id:
        type: number
      slug:
        type: string
    required:
      - id
      - slug
  CreateUserRequestBody:
    type: object
    properties:
      data:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          age:
            type: number
          email:
            $ref: '#/definitions/Email'
          address:
            $ref: '#/definitions/Address'
        required:
          - firstName
          - lastName
          - age
          - email
          - address
    required:
      - data
  Email:
    type: string
  Address:
    type: string
"
`;
