// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenAPI 2 generator produces valid code multi-file: json 1`] = `
"{
  \\"swagger\\": \\"2.0\\",
  \\"tags\\": [
    {
      \\"name\\": \\"TODO\\"
    }
  ],
  \\"info\\": {
    \\"version\\": \\"0.0.0\\",
    \\"title\\": \\"TODO\\",
    \\"contact\\": {
      \\"name\\": \\"TODO\\"
    }
  },
  \\"paths\\": {
    \\"/users/create\\": {
      \\"post\\": {
        \\"operationId\\": \\"createUser\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [
          \\"application/json\\"
        ],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"body\\",
            \\"name\\": \\"body\\",
            \\"description\\": \\"TODO\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/CreateUserRequest\\"
            }
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/CreateUserResponse\\"
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"description\\": \\"\\"
          }
        }
      }
    },
    \\"/users/{userId}-confirmed\\": {
      \\"delete\\": {
        \\"operationId\\": \\"deleteUser\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"path\\",
            \\"name\\": \\"userId\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"string\\",
            \\"required\\": true
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"\\"
          },
          \\"403\\": {
            \\"schema\\": {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"message\\": {
                  \\"type\\": \\"string\\"
                },
                \\"signedInAs\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"message\\",
                \\"signedInAs\\"
              ]
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"schema\\": {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"message\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"message\\"
              ]
            },
            \\"description\\": \\"\\"
          }
        }
      }
    },
    \\"/users\\": {
      \\"get\\": {
        \\"operationId\\": \\"findUsers\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"query\\",
            \\"name\\": \\"limit\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"number\\",
            \\"required\\": false
          },
          {
            \\"in\\": \\"query\\",
            \\"name\\": \\"search_term\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"string\\",
            \\"required\\": true
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"schema\\": {
              \\"type\\": \\"array\\",
              \\"items\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                  \\"name\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"age\\": {
                    \\"type\\": \\"number\\"
                  }
                },
                \\"required\\": [
                  \\"name\\"
                ]
              }
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"description\\": \\"\\"
          }
        }
      }
    },
    \\"/users/{userId}\\": {
      \\"get\\": {
        \\"operationId\\": \\"getUser\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"path\\",
            \\"name\\": \\"userId\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"string\\",
            \\"required\\": true
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"schema\\": {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"number\\"
                }
              },
              \\"required\\": [
                \\"name\\"
              ]
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"description\\": \\"\\"
          }
        }
      }
    }
  },
  \\"definitions\\": {
    \\"CreateUserRequest\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"name\\": {
          \\"type\\": \\"string\\"
        }
      },
      \\"required\\": [
        \\"name\\"
      ]
    },
    \\"CreateUserResponse\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"success\\": {
          \\"type\\": \\"boolean\\"
        }
      },
      \\"required\\": [
        \\"success\\"
      ]
    },
    \\"GetUserResponse\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"name\\": {
          \\"type\\": \\"string\\"
        }
      },
      \\"required\\": [
        \\"name\\"
      ]
    }
  }
}"
`;

exports[`OpenAPI 2 generator produces valid code multi-file: yaml 1`] = `
"swagger: '2.0'
tags:
  - name: TODO
info:
  version: 0.0.0
  title: TODO
  contact:
    name: TODO
paths:
  /users/create:
    post:
      operationId: createUser
      description: TODO
      consumes:
        - application/json
      tags:
        - TODO
      parameters:
        - in: body
          name: body
          description: TODO
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/CreateUserResponse'
          description: ''
        default:
          description: ''
  '/users/{userId}-confirmed':
    delete:
      operationId: deleteUser
      description: TODO
      consumes: []
      tags:
        - TODO
      parameters:
        - in: path
          name: userId
          description: TODO
          type: string
          required: true
      responses:
        '200':
          description: ''
        '403':
          schema:
            type: object
            properties:
              message:
                type: string
              signedInAs:
                type: string
            required:
              - message
              - signedInAs
          description: ''
        default:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: ''
  /users:
    get:
      operationId: findUsers
      description: TODO
      consumes: []
      tags:
        - TODO
      parameters:
        - in: query
          name: limit
          description: TODO
          type: number
          required: false
        - in: query
          name: search_term
          description: TODO
          type: string
          required: true
      responses:
        '200':
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: number
              required:
                - name
          description: ''
        default:
          description: ''
  '/users/{userId}':
    get:
      operationId: getUser
      description: TODO
      consumes: []
      tags:
        - TODO
      parameters:
        - in: path
          name: userId
          description: TODO
          type: string
          required: true
      responses:
        '200':
          schema:
            type: object
            properties:
              name:
                type: string
              age:
                type: number
            required:
              - name
          description: ''
        default:
          description: ''
definitions:
  CreateUserRequest:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  CreateUserResponse:
    type: object
    properties:
      success:
        type: boolean
    required:
      - success
  GetUserResponse:
    type: object
    properties:
      name:
        type: string
    required:
      - name
"
`;

exports[`OpenAPI 2 generator produces valid code single-file: json 1`] = `
"{
  \\"swagger\\": \\"2.0\\",
  \\"tags\\": [
    {
      \\"name\\": \\"TODO\\"
    }
  ],
  \\"info\\": {
    \\"version\\": \\"0.0.0\\",
    \\"title\\": \\"TODO\\",
    \\"contact\\": {
      \\"name\\": \\"TODO\\"
    }
  },
  \\"paths\\": {
    \\"/users/create\\": {
      \\"post\\": {
        \\"operationId\\": \\"createUser\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [
          \\"application/json\\"
        ],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"body\\",
            \\"name\\": \\"body\\",
            \\"description\\": \\"TODO\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/CreateUserRequest\\"
            }
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/CreateUserResponse\\"
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"description\\": \\"\\"
          }
        }
      }
    },
    \\"/users\\": {
      \\"get\\": {
        \\"operationId\\": \\"findUsers\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"query\\",
            \\"name\\": \\"limit\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"number\\",
            \\"required\\": false
          },
          {
            \\"in\\": \\"query\\",
            \\"name\\": \\"search_term\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"string\\",
            \\"required\\": true
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"schema\\": {
              \\"type\\": \\"array\\",
              \\"items\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                  \\"name\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"age\\": {
                    \\"type\\": \\"number\\"
                  }
                },
                \\"required\\": [
                  \\"name\\"
                ]
              }
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"description\\": \\"\\"
          }
        }
      }
    },
    \\"/users/{userId}\\": {
      \\"get\\": {
        \\"operationId\\": \\"getUser\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"path\\",
            \\"name\\": \\"userId\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"string\\",
            \\"required\\": true
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"schema\\": {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"name\\": {
                  \\"type\\": \\"string\\"
                },
                \\"age\\": {
                  \\"type\\": \\"number\\"
                }
              },
              \\"required\\": [
                \\"name\\"
              ]
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"description\\": \\"\\"
          }
        }
      }
    },
    \\"/users/{userId}-confirmed\\": {
      \\"delete\\": {
        \\"operationId\\": \\"deleteUser\\",
        \\"description\\": \\"TODO\\",
        \\"consumes\\": [],
        \\"tags\\": [
          \\"TODO\\"
        ],
        \\"parameters\\": [
          {
            \\"in\\": \\"path\\",
            \\"name\\": \\"userId\\",
            \\"description\\": \\"TODO\\",
            \\"type\\": \\"string\\",
            \\"required\\": true
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"\\"
          },
          \\"403\\": {
            \\"schema\\": {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"message\\": {
                  \\"type\\": \\"string\\"
                },
                \\"signedInAs\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"message\\",
                \\"signedInAs\\"
              ]
            },
            \\"description\\": \\"\\"
          },
          \\"default\\": {
            \\"schema\\": {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"message\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"required\\": [
                \\"message\\"
              ]
            },
            \\"description\\": \\"\\"
          }
        }
      }
    }
  },
  \\"definitions\\": {
    \\"CreateUserRequest\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"name\\": {
          \\"type\\": \\"string\\"
        }
      },
      \\"required\\": [
        \\"name\\"
      ]
    },
    \\"CreateUserResponse\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"success\\": {
          \\"type\\": \\"boolean\\"
        }
      },
      \\"required\\": [
        \\"success\\"
      ]
    },
    \\"GetUserResponse\\": {
      \\"type\\": \\"object\\",
      \\"properties\\": {
        \\"name\\": {
          \\"type\\": \\"string\\"
        }
      },
      \\"required\\": [
        \\"name\\"
      ]
    }
  }
}"
`;

exports[`OpenAPI 2 generator produces valid code single-file: yaml 1`] = `
"swagger: '2.0'
tags:
  - name: TODO
info:
  version: 0.0.0
  title: TODO
  contact:
    name: TODO
paths:
  /users/create:
    post:
      operationId: createUser
      description: TODO
      consumes:
        - application/json
      tags:
        - TODO
      parameters:
        - in: body
          name: body
          description: TODO
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/CreateUserResponse'
          description: ''
        default:
          description: ''
  /users:
    get:
      operationId: findUsers
      description: TODO
      consumes: []
      tags:
        - TODO
      parameters:
        - in: query
          name: limit
          description: TODO
          type: number
          required: false
        - in: query
          name: search_term
          description: TODO
          type: string
          required: true
      responses:
        '200':
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: number
              required:
                - name
          description: ''
        default:
          description: ''
  '/users/{userId}':
    get:
      operationId: getUser
      description: TODO
      consumes: []
      tags:
        - TODO
      parameters:
        - in: path
          name: userId
          description: TODO
          type: string
          required: true
      responses:
        '200':
          schema:
            type: object
            properties:
              name:
                type: string
              age:
                type: number
            required:
              - name
          description: ''
        default:
          description: ''
  '/users/{userId}-confirmed':
    delete:
      operationId: deleteUser
      description: TODO
      consumes: []
      tags:
        - TODO
      parameters:
        - in: path
          name: userId
          description: TODO
          type: string
          required: true
      responses:
        '200':
          description: ''
        '403':
          schema:
            type: object
            properties:
              message:
                type: string
              signedInAs:
                type: string
            required:
              - message
              - signedInAs
          description: ''
        default:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: ''
definitions:
  CreateUserRequest:
    type: object
    properties:
      name:
        type: string
    required:
      - name
  CreateUserResponse:
    type: object
    properties:
      success:
        type: boolean
    required:
      - success
  GetUserResponse:
    type: object
    properties:
      name:
        type: string
    required:
      - name
"
`;
